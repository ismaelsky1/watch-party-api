version: '3.8'

services:
  dev:
    container_name: nestjs_api_dev
    image: nestjs-api-dev:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:debug
    ports:
      - 3002:3002
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
  prod:
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 3002:3002
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

networks:
  nesjs-network:
# version: '3'
# services:
#   # postgres:
#   #   image: postgres
#   #   ports:
#   #     - "5432:5432"
#   #   environment:
#   #     POSTGRES_USER: "root"
#   #     POSTGRES_PASSWORD: "root"
#   #     POSTGRES_DB: "heroes"
#   #   networks:
#   #     - pgnet

#   mongo:
#     image: mongo
#     ports:
#       - '27017:27017'
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: 'root'
#       MONGO_INITDB_ROOT_PASSWORD: 'root'

#   # MONGO_INITDB_DATABASE: "shild"
#   # networks:
#   #   - mongonet

#   # adminer:
#   #   image: adminer
#   #   ports:
#   #     - "8080:8080"
#   #   depends_on:
#   #     - postgres
#   #   networks:
#   #     - pgnet

#   mongoclient:
#     image: mongoclient/mongoclient
#     ports:
#       - '8081:3000'
#     depends_on:
#       - mongo
#     environment:
#       STARTUP_DELAY: 10
#       MONGO_URL: 'mongodb://root:root@mongo:27017/admin'

#     # networks:
#     #   - mongonet

#   # networks:
#   #   # pgnet:
#   #   mongonet:
